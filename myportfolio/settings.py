"""
Django settings for myportfolio project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/

"""


from pathlib import Path 
import os 
import pymysql
from decouple import config 
import dj_database_url
pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-7#1^7b*)c0m796z4mul^!8%h6ay7s)a0sfipkvz3aop8wcv0e)'
)
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
ALLOWED_HOSTS = os.environ.get(
    'ALLOWED_HOSTS',
    '127.0.0.1,localhost,lagoswebdev.com,www.lagoswebdev.com,lagoswebdev.com.hypeblog9jatv.com.ng,www.lagoswebdev.com.hypeblog9jatv.com.ng,mail.lagoswebdev.com'
).split(',')

SITE_ID = 1 
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites', 
    'django.contrib.sitemaps',
    'ckeditor',
    'ckeditor_uploader',
    'pages',        # We will create this app
    'projects',     # We will create this app
    'contact', 
    'pricing'  ,  
    'blog',     
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware', 
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'myportfolio.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myportfolio.wsgi.application'



# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    'default': dj_database_url.config(
        default=config('DATABASE_URL', default=None), # Gets DATABASE_URL from .env or system environment
        conn_max_age=600 # Optional: keeps database connections alive for better performance
    )
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/



# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Media files (for user-uploaded content like project images)
import os
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

from datetime import datetime

def current_year(request):
    return {
        'current_year': datetime.now().year
    }

# Static files (CSS, JavaScript, Images)

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles' # Where Django will collect all static files for deployment
STATICFILES_DIRS = [                  # Where Django will look for your app's static files
    BASE_DIR / "static",              # Example: If you have a 'static' folder at your project root
    # BASE_DIR / "myportfolio_site/static", # If you prefer to put project-wide static files here
]

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Email Configuration (for contact form)
# Production Email Configuration for Hosting Provider SMTP
# settings.py

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp-relay.brevo.com'  # Or smtp.sendinblue.com if using an older domain
EMAIL_PORT = 587                    # Recommended for TLS with Brevo
EMAIL_USE_TLS = True                # Use TLS for port 587
EMAIL_USE_SSL = False               # Disable SSL if using TLS on 587

# Ensure this is the email address registered with Brevo as your sender
EMAIL_HOST_USER = 'contact@lagoswebdev.com' # Or whatever email you set up in Brevo

# This environment variable MUST hold your Brevo SMTP API Key
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')

# This should also be an email address registered with Brevo
DEFAULT_FROM_EMAIL = 'contact@lagoswebdev.com'

# It's also good practice to set SERVER_EMAIL for Django's internal error reporting
SERVER_EMAIL = DEFAULT_FROM_EMAIL
# For Django's internal error reporting (optional, but good practice)
SERVER_EMAIL = DEFAULT_FROM_EMAIL
ADMINS = [('Tijani Apatira', 'tijaniapatira@gmail.com')] # Replace with your real Gmail

SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-7#1^7b*)c0m796z4mul^!8%h6ay7s)a0sfipkvz3aop8wcv0e)')

BREVO_API_KEY = os.environ.get('BREVO_API_KEY')



LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'contact': { # This matches the name of your app
            'handlers': ['console'],
            'level': 'INFO', # Set to INFO to see the debug lines
            'propagate': False,
        },
        'django': {
            'handlers': ['console'],
            'level': 'INFO', # You might want to change this to 'WARNING' for less verbosity
            'propagate': False,
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    }
}

CKEDITOR_UPLOAD_PATH = "uploads/" # This is where uploaded files will go within your MEDIA_ROOT
CKEDITOR_IMAGE_BACKEND = "pillow" # Make sure Pillow is installed (pip install Pillow)

CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'Full', # Or 'Basic', 'Standard' - defines the toolbar buttons
        'height': 500,
        'width': '100%',
        'filebrowserWindowHeight': 725,
        'filebrowserWindowWidth': 940,
        'toolbarCanCollapse': True,
        'mathJaxLib': '//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-AMS_HTML',
        'tabSpaces': 4,
        'extraPlugins': ','.join([
            'uploadimage', # the upload image feature
            'uploadwidget', # this is needed to upload files
            # Your other extra plugins...
            'div',
            'autolink',
            'autoembed',
            'embedsemantic',
            'autogrow',
            'widget',
            'lineutils',
            'clipboard',
            'dialog',
            'dialogui',
            'elementspath'
        ]),
    },
    'awesome_toolbar': { # Example of a custom toolbar
        'toolbar': 'Custom',
        'toolbar_Custom': [
            ['Bold', 'Italic', 'Underline'],
            ['NumberedList', 'BulletedList', '-', 'Outdent', 'Indent', '-', 'JustifyLeft', 'JustifyCenter', 'JustifyRight', 'JustifyBlock'],
            ['Link', 'Unlink', 'Anchor', 'Image', 'Flash', 'Table', 'HorizontalRule', 'Smiley', 'SpecialChar', 'PageBreak'],
            ['Styles', 'Format', 'Font', 'FontSize'],
            ['TextColor', 'BGColor'],
            ['Maximize', 'ShowBlocks', '-', 'Source'],
            ['SpellChecker', 'Scayt']
        ],
        'extraPlugins': ','.join([
            'uploadimage', # the upload image feature
            'uploadwidget', # this is needed to upload files
        ]),
        'height': 300,
        'width': '100%',
    },
}